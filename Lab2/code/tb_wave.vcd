$date
	Wed May  1 21:12:11 2019
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module TestBench $end
$scope module cpu $end
$var wire 1 ! clk_i $end
$var wire 1 " rst_i $end
$var wire 32 # reg_rt [31:0] $end
$var wire 32 $ reg_rs [31:0] $end
$var wire 5 % reg_dst [4:0] $end
$var wire 32 & pc_se_sl2_PLUS_pc_4 [31:0] $end
$var wire 32 ' pc_se_sl2 [31:0] $end
$var wire 32 ( pc_se [31:0] $end
$var wire 32 ) pc_output [31:0] $end
$var wire 32 * pc_instr [31:0] $end
$var wire 32 + pc_input [31:0] $end
$var wire 32 , pc_4 [31:0] $end
$var wire 1 - alu_zero $end
$var wire 32 . alu_src2 [31:0] $end
$var wire 32 / alu_src1 [31:0] $end
$var wire 32 0 alu_result [31:0] $end
$var wire 4 1 alu_ctrl [3:0] $end
$var wire 1 2 RegWrite $end
$var wire 1 3 RegDst $end
$var wire 1 4 Branch $end
$var wire 1 5 ALUSrc $end
$var wire 3 6 ALUOp [2:0] $end
$scope module AC $end
$var wire 6 7 funct_i [5:0] $end
$var wire 3 8 ALUOp_i [2:0] $end
$var reg 4 9 ALUCtrl_o [3:0] $end
$upscope $end
$scope module ALU $end
$var wire 4 : ctrl_i [3:0] $end
$var wire 1 - zero_o $end
$var wire 32 ; src2_i [31:0] $end
$var wire 32 < src1_i [31:0] $end
$var reg 32 = result_o [31:0] $end
$upscope $end
$scope module Adder1 $end
$var wire 32 > src2_i [31:0] $end
$var wire 32 ? sum_o [31:0] $end
$var wire 32 @ src1_i [31:0] $end
$upscope $end
$scope module Adder2 $end
$var wire 32 A src1_i [31:0] $end
$var wire 32 B sum_o [31:0] $end
$var wire 32 C src2_i [31:0] $end
$upscope $end
$scope module Decoder $end
$var wire 6 D instr_op_i [5:0] $end
$var reg 1 5 ALUSrc_o $end
$var reg 3 E ALU_op_o [2:0] $end
$var reg 1 4 Branch_o $end
$var reg 1 3 RegDst_o $end
$var reg 1 2 RegWrite_o $end
$upscope $end
$scope module IM $end
$var wire 32 F pc_addr_i [31:0] $end
$var reg 32 G instr_o [31:0] $end
$var integer 32 H i [31:0] $end
$upscope $end
$scope module Mux_ALUSrc $end
$var wire 1 5 select_i $end
$var wire 32 I data_o [31:0] $end
$var wire 32 J data1_i [31:0] $end
$var wire 32 K data0_i [31:0] $end
$upscope $end
$scope module Mux_PC_Source $end
$var wire 32 L data0_i [31:0] $end
$var wire 32 M data1_i [31:0] $end
$var wire 1 N select_i $end
$var wire 32 O data_o [31:0] $end
$upscope $end
$scope module Mux_Write_Reg $end
$var wire 5 P data0_i [4:0] $end
$var wire 5 Q data1_i [4:0] $end
$var wire 1 3 select_i $end
$var wire 5 R data_o [4:0] $end
$upscope $end
$scope module Mux_if_sra $end
$var wire 32 S data1_i [31:0] $end
$var wire 1 T select_i $end
$var wire 32 U data_o [31:0] $end
$var wire 32 V data0_i [31:0] $end
$upscope $end
$scope module PC $end
$var wire 1 ! clk_i $end
$var wire 32 W pc_in_i [31:0] $end
$var wire 1 " rst_i $end
$var reg 32 X pc_out_o [31:0] $end
$upscope $end
$scope module RF $end
$var wire 5 Y RDaddr_i [4:0] $end
$var wire 32 Z RDdata_i [31:0] $end
$var wire 5 [ RSaddr_i [4:0] $end
$var wire 32 \ RSdata_o [31:0] $end
$var wire 5 ] RTaddr_i [4:0] $end
$var wire 32 ^ RTdata_o [31:0] $end
$var wire 1 2 RegWrite_i $end
$var wire 1 ! clk_i $end
$var wire 1 " rst_i $end
$upscope $end
$scope module SE $end
$var wire 3 _ ALUOp_i [2:0] $end
$var wire 16 ` data_i [15:0] $end
$var wire 6 a funct_i [5:0] $end
$var wire 6 b op_i [5:0] $end
$var reg 32 c data_o [31:0] $end
$upscope $end
$scope module Shifter $end
$var wire 32 d data_i [31:0] $end
$var wire 32 e data_o [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx00 e
bx d
bx c
bx b
bx a
bx `
bx _
bx ^
bx ]
bx \
bx [
bx Z
bx Y
bx X
bx W
bx V
bx U
xT
b0xxxxx S
bx R
bx Q
bx P
bx O
xN
bx M
bx L
bx K
bx J
bx I
b100000 H
bx G
bx F
bx E
bx D
bx00 C
bx B
bx A
bx @
bx ?
b100 >
bx =
bx <
bx ;
bx :
bx 9
bx 8
bx 7
bx 6
x5
x4
x3
x2
bx 1
bx 0
bx /
bx .
x-
bx ,
bx +
bx *
bx )
bx (
bx00 '
bx &
bx %
bx $
bx #
0"
0!
$end
#5
0-
b100 +
b100 O
b100 W
b11 0
b11 =
b11 Z
b10000 &
b10000 B
b10000 M
b1100 '
b1100 C
b1100 e
0N
b11 .
b11 ;
b11 I
b11 (
b11 J
b11 c
b11 d
b1 1
b1 9
b1 :
b110 6
b110 8
b110 E
b110 _
04
12
15
03
b0 /
b0 <
b0 U
b1010 %
b1010 R
b1010 Y
1T
b0 S
b11 a
b1101 b
b11 `
b11 7
b1101 D
b0 #
b0 K
b0 ^
b1010 ]
b0 $
b0 V
b0 \
b0 [
b0 Q
b1010 P
b110100000010100000000000000011 *
b110100000010100000000000000011 G
b100 ,
b100 ?
b100 A
b100 L
b0 )
b0 @
b0 F
b0 X
1!
#10
b11 #
b11 K
b11 ^
0!
1"
#15
b11111111111111111111111111011000 '
b11111111111111111111111111011000 C
b11111111111111111111111111011000 e
b11111111111111111111111111110110 .
b11111111111111111111111111110110 ;
b11111111111111111111111111110110 I
b11111111111101100000000000000000 0
b11111111111101100000000000000000 =
b11111111111101100000000000000000 Z
b11111111111111111111111111110110 (
b11111111111111111111111111110110 J
b11111111111111111111111111110110 c
b11111111111111111111111111110110 d
b1011 1
b1011 9
b1011 :
b101 6
b101 8
b101 E
b101 _
b1011 %
b1011 R
b1011 Y
0T
b11111 S
b110110 a
b1111 b
b1111111111110110 `
b110110 7
b1111 D
b0 #
b0 K
b0 ^
b1011 ]
b11111 Q
b1011 P
b1000 +
b1000 O
b1000 W
b111100000010111111111111110110 *
b111100000010111111111111110110 G
b11111111111111111111111111100000 &
b11111111111111111111111111100000 B
b11111111111111111111111111100000 M
b1000 ,
b1000 ?
b1000 A
b1000 L
b100 )
b100 @
b100 F
b100 X
1!
#20
0!
#25
b10110100000001100 '
b10110100000001100 C
b10110100000001100 e
b11111111111111111111011000000000 0
b11111111111111111111011000000000 =
b11111111111111111111011000000000 Z
b11111111111101100000000000000000 .
b11111111111101100000000000000000 ;
b11111111111101100000000000000000 I
b1000 /
b1000 <
b1000 U
b101101000000011 (
b101101000000011 J
b101101000000011 c
b101101000000011 d
b1001 1
b1001 9
b1001 :
b10 6
b10 8
b10 E
b10 _
05
13
1T
b1000 S
b11 a
b0 b
b101101000000011 `
b11 7
b0 D
b1011 Q
b1100 +
b1100 O
b1100 W
b10110101101000000011 *
b10110101101000000011 G
b10110100000011000 &
b10110100000011000 B
b10110100000011000 M
b1100 ,
b1100 ?
b1100 A
b1100 L
b1000 )
b1000 @
b1000 F
b1000 X
b11111111111101100000000000000000 #
b11111111111101100000000000000000 K
b11111111111101100000000000000000 ^
1!
#30
0!
#35
b10110000000011100 '
b10110000000011100 C
b10110000000011100 e
b11 /
b11 <
b11 U
b101100000000111 (
b101100000000111 J
b101100000000111 c
b101100000000111 d
0T
b0 S
b111 a
b101100000000111 `
b111 7
b11 $
b11 V
b11 \
b1010 [
b11111111111111111111111011000000 0
b11111111111111111111111011000000 =
b11111111111111111111111011000000 Z
b10000 +
b10000 O
b10000 W
b1010010110101100000000111 *
b1010010110101100000000111 G
b11111111111111111111011000000000 .
b11111111111111111111011000000000 ;
b11111111111111111111011000000000 I
b10110000000101100 &
b10110000000101100 B
b10110000000101100 M
b10000 ,
b10000 ?
b10000 A
b10000 L
b1100 )
b1100 @
b1100 F
b1100 X
b11111111111111111111011000000000 #
b11111111111111111111011000000000 K
b11111111111111111111011000000000 ^
1!
#40
0!
#45
b11111111111111111111111111111100 '
b11111111111111111111111111111100 C
b11111111111111111111111111111100 e
b11111111111111111111111111111111 (
b11111111111111111111111111111111 J
b11111111111111111111111111111111 c
b11111111111111111111111111111111 d
b10 1
b10 9
b10 :
b0 6
b0 8
b0 E
b0 _
15
03
b1010 %
b1010 R
b1010 Y
b11111 S
b111111 a
b1000 b
b1111111111111111 `
b111111 7
b1000 D
b1010 ]
b11111 Q
b1010 P
b10 0
b10 =
b10 Z
b10100 +
b10100 O
b10100 W
b100001010010101111111111111111 *
b100001010010101111111111111111 G
b11111111111111111111111111111111 .
b11111111111111111111111111111111 ;
b11111111111111111111111111111111 I
b10000 &
b10000 B
b10000 M
b10100 ,
b10100 ?
b10100 A
b10100 L
b10000 )
b10000 @
b10000 F
b10000 X
b11 #
b11 K
b11 ^
1!
#50
0!
#55
1N
b11111111111111111111111111110100 '
b11111111111111111111111111110100 C
b11111111111111111111111111110100 e
1-
b0 .
b0 ;
b0 I
b11111111111111111111111111111101 (
b11111111111111111111111111111101 J
b11111111111111111111111111111101 c
b11111111111111111111111111111101 d
b101 1
b101 9
b101 :
b11 6
b11 8
b11 E
b11 _
14
02
05
b0 %
b0 R
b0 Y
b111101 a
b101 b
b1111111111111101 `
b111101 7
b101 D
b0 ]
b0 P
b10 0
b10 =
b10 Z
b1100 +
b1100 O
b1100 W
b10101010000001111111111111101 *
b10101010000001111111111111101 G
b10 /
b10 <
b10 U
b1100 &
b1100 B
b1100 M
b11000 ,
b11000 ?
b11000 A
b11000 L
b10100 )
b10100 @
b10100 F
b10100 X
b10 $
b10 V
b10 \
b0 #
b0 K
b0 ^
1!
#60
0!
#65
b10110000000011100 '
b10110000000011100 C
b10110000000011100 e
0-
0N
b11111111111111111111111110110000 0
b11111111111111111111111110110000 =
b11111111111111111111111110110000 Z
b101100000000111 (
b101100000000111 J
b101100000000111 c
b101100000000111 d
b1001 1
b1001 9
b1001 :
b10 6
b10 8
b10 E
b10 _
04
12
13
b11111111111111111111111011000000 .
b11111111111111111111111011000000 ;
b11111111111111111111111011000000 I
b1011 %
b1011 R
b1011 Y
b0 S
b111 a
b0 b
b101100000000111 `
b111 7
b0 D
b11111111111111111111111011000000 #
b11111111111111111111111011000000 K
b11111111111111111111111011000000 ^
b1011 ]
b1011 Q
b1011 P
b10000 +
b10000 O
b10000 W
b1010010110101100000000111 *
b1010010110101100000000111 G
b10110000000101100 &
b10110000000101100 B
b10110000000101100 M
b10000 ,
b10000 ?
b10000 A
b10000 L
b1100 )
b1100 @
b1100 F
b1100 X
1!
#70
0!
#75
b11111111111111111111111111111100 '
b11111111111111111111111111111100 C
b11111111111111111111111111111100 e
b11111111111111111111111111111111 (
b11111111111111111111111111111111 J
b11111111111111111111111111111111 c
b11111111111111111111111111111111 d
b10 1
b10 9
b10 :
b0 6
b0 8
b0 E
b0 _
15
03
b1010 %
b1010 R
b1010 Y
b11111 S
b111111 a
b1000 b
b1111111111111111 `
b111111 7
b1000 D
b1010 ]
b11111 Q
b1010 P
b1 0
b1 =
b1 Z
b10100 +
b10100 O
b10100 W
b100001010010101111111111111111 *
b100001010010101111111111111111 G
b11111111111111111111111111111111 .
b11111111111111111111111111111111 ;
b11111111111111111111111111111111 I
b10000 &
b10000 B
b10000 M
b10100 ,
b10100 ?
b10100 A
b10100 L
b10000 )
b10000 @
b10000 F
b10000 X
b10 #
b10 K
b10 ^
1!
#80
0!
#85
b11111111111111111111111111110100 '
b11111111111111111111111111110100 C
b11111111111111111111111111110100 e
b0 .
b0 ;
b0 I
1N
b11111111111111111111111111111101 (
b11111111111111111111111111111101 J
b11111111111111111111111111111101 c
b11111111111111111111111111111101 d
b101 1
b101 9
b101 :
b11 6
b11 8
b11 E
b11 _
14
02
05
b0 %
b0 R
b0 Y
1-
b111101 a
b101 b
b1111111111111101 `
b111101 7
b101 D
b0 ]
b0 P
b1 0
b1 =
b1 Z
b1100 +
b1100 O
b1100 W
b10101010000001111111111111101 *
b10101010000001111111111111101 G
b1 /
b1 <
b1 U
b1100 &
b1100 B
b1100 M
b11000 ,
b11000 ?
b11000 A
b11000 L
b10100 )
b10100 @
b10100 F
b10100 X
b1 $
b1 V
b1 \
b0 #
b0 K
b0 ^
1!
#90
0!
#95
b10110000000011100 '
b10110000000011100 C
b10110000000011100 e
0-
0N
b11111111111111111111111111011000 0
b11111111111111111111111111011000 =
b11111111111111111111111111011000 Z
b101100000000111 (
b101100000000111 J
b101100000000111 c
b101100000000111 d
b1001 1
b1001 9
b1001 :
b10 6
b10 8
b10 E
b10 _
04
12
13
b11111111111111111111111110110000 .
b11111111111111111111111110110000 ;
b11111111111111111111111110110000 I
b1011 %
b1011 R
b1011 Y
b0 S
b111 a
b0 b
b101100000000111 `
b111 7
b0 D
b11111111111111111111111110110000 #
b11111111111111111111111110110000 K
b11111111111111111111111110110000 ^
b1011 ]
b1011 Q
b1011 P
b10000 +
b10000 O
b10000 W
b1010010110101100000000111 *
b1010010110101100000000111 G
b10110000000101100 &
b10110000000101100 B
b10110000000101100 M
b10000 ,
b10000 ?
b10000 A
b10000 L
b1100 )
b1100 @
b1100 F
b1100 X
1!
#100
0!
#105
1-
b11111111111111111111111111111100 '
b11111111111111111111111111111100 C
b11111111111111111111111111111100 e
b11111111111111111111111111111111 (
b11111111111111111111111111111111 J
b11111111111111111111111111111111 c
b11111111111111111111111111111111 d
b10 1
b10 9
b10 :
b0 6
b0 8
b0 E
b0 _
15
03
b1010 %
b1010 R
b1010 Y
b11111 S
b111111 a
b1000 b
b1111111111111111 `
b111111 7
b1000 D
b1010 ]
b11111 Q
b1010 P
b0 0
b0 =
b0 Z
b10100 +
b10100 O
b10100 W
b100001010010101111111111111111 *
b100001010010101111111111111111 G
b11111111111111111111111111111111 .
b11111111111111111111111111111111 ;
b11111111111111111111111111111111 I
b10000 &
b10000 B
b10000 M
b10100 ,
b10100 ?
b10100 A
b10100 L
b10000 )
b10000 @
b10000 F
b10000 X
b1 #
b1 K
b1 ^
1!
#110
0!
#115
0N
b11111111111111111111111111110100 '
b11111111111111111111111111110100 C
b11111111111111111111111111110100 e
b0 .
b0 ;
b0 I
b11111111111111111111111111111101 (
b11111111111111111111111111111101 J
b11111111111111111111111111111101 c
b11111111111111111111111111111101 d
b101 1
b101 9
b101 :
b11 6
b11 8
b11 E
b11 _
14
02
05
b0 %
b0 R
b0 Y
0-
b111101 a
b101 b
b1111111111111101 `
b111101 7
b101 D
b0 ]
b0 P
b0 0
b0 =
b0 Z
b11000 +
b11000 O
b11000 W
b10101010000001111111111111101 *
b10101010000001111111111111101 G
b0 /
b0 <
b0 U
b1100 &
b1100 B
b1100 M
b11000 ,
b11000 ?
b11000 A
b11000 L
b10100 )
b10100 @
b10100 F
b10100 X
b0 $
b0 V
b0 \
b0 #
b0 K
b0 ^
1!
#120
0!
#125
b0 '
b0 C
b0 e
1-
b0 (
b0 J
b0 c
b0 d
b1111 1
b1111 9
b1111 :
b10 6
b10 8
b10 E
b10 _
04
12
13
b0 S
b0 a
b0 b
b0 `
b0 7
b0 D
b0 [
b0 Q
b11100 +
b11100 O
b11100 W
b0 *
b0 G
b11100 &
b11100 B
b11100 M
b11100 ,
b11100 ?
b11100 A
b11100 L
b11000 )
b11000 @
b11000 F
b11000 X
1!
#130
0!
#135
b100000 +
b100000 O
b100000 W
b100000 &
b100000 B
b100000 M
b100000 ,
b100000 ?
b100000 A
b100000 L
b11100 )
b11100 @
b11100 F
b11100 X
1!
#140
0!
#145
b100100 +
b100100 O
b100100 W
b100100 &
b100100 B
b100100 M
b100100 ,
b100100 ?
b100100 A
b100100 L
b100000 )
b100000 @
b100000 F
b100000 X
1!
#150
0!
#155
b101000 +
b101000 O
b101000 W
b101000 &
b101000 B
b101000 M
b101000 ,
b101000 ?
b101000 A
b101000 L
b100100 )
b100100 @
b100100 F
b100100 X
1!
#160
0!
#165
b101100 +
b101100 O
b101100 W
b101100 &
b101100 B
b101100 M
b101100 ,
b101100 ?
b101100 A
b101100 L
b101000 )
b101000 @
b101000 F
b101000 X
1!
#170
0!
#175
b110000 +
b110000 O
b110000 W
b110000 &
b110000 B
b110000 M
b110000 ,
b110000 ?
b110000 A
b110000 L
b101100 )
b101100 @
b101100 F
b101100 X
1!
#180
0!
#185
b110100 +
b110100 O
b110100 W
b110100 &
b110100 B
b110100 M
b110100 ,
b110100 ?
b110100 A
b110100 L
b110000 )
b110000 @
b110000 F
b110000 X
1!
#190
0!
#195
b111000 +
b111000 O
b111000 W
b111000 &
b111000 B
b111000 M
b111000 ,
b111000 ?
b111000 A
b111000 L
b110100 )
b110100 @
b110100 F
b110100 X
1!
#200
0!
#205
b111100 +
b111100 O
b111100 W
b111100 &
b111100 B
b111100 M
b111100 ,
b111100 ?
b111100 A
b111100 L
b111000 )
b111000 @
b111000 F
b111000 X
1!
#210
0!
#215
b1000000 +
b1000000 O
b1000000 W
b1000000 &
b1000000 B
b1000000 M
b1000000 ,
b1000000 ?
b1000000 A
b1000000 L
b111100 )
b111100 @
b111100 F
b111100 X
1!
#220
0!
#225
b1000100 +
b1000100 O
b1000100 W
b1000100 &
b1000100 B
b1000100 M
b1000100 ,
b1000100 ?
b1000100 A
b1000100 L
b1000000 )
b1000000 @
b1000000 F
b1000000 X
1!
#230
0!
#235
b1001000 +
b1001000 O
b1001000 W
b1001000 &
b1001000 B
b1001000 M
b1001000 ,
b1001000 ?
b1001000 A
b1001000 L
b1000100 )
b1000100 @
b1000100 F
b1000100 X
1!
#240
0!
#245
b1001100 +
b1001100 O
b1001100 W
b1001100 &
b1001100 B
b1001100 M
b1001100 ,
b1001100 ?
b1001100 A
b1001100 L
b1001000 )
b1001000 @
b1001000 F
b1001000 X
1!
#250
0!
#255
b1010000 +
b1010000 O
b1010000 W
b1010000 &
b1010000 B
b1010000 M
b1010000 ,
b1010000 ?
b1010000 A
b1010000 L
b1001100 )
b1001100 @
b1001100 F
b1001100 X
1!
#260
0!
